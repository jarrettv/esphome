#sudo docker run --rm -v "${PWD}":/config --device=/dev/ttyUSB0 -it esphome/esphome stairs.yaml run

substitutions:
  display_name: Stairs

esphome:
  name: stairs
  platform: ESP32
  board: nodemcu-32s
   
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
                               
logger:
  level: INFO
api:
  services:
    - service: steps_fade
      then:
        - script.execute: fade

    - service: steps_fade_up_on
      then:
        - script.execute: fade_up_on

    - service: steps_fade_up_off
      then:
        - script.execute: fade_up_off

    - service: steps_fade_down_on
      then:
        - script.execute: fade_down_on

    - service: steps_fade_down_off
      then:
        - script.execute: fade_down_off

    - service: steps_brighten
      then:
        - script.execute: brighten

    - service: steps_darken
      then:
        - script.execute: darken
  
ota:

web_server:
  port: 80

output:
  - platform: ledc
    pin: GPIO4
    id: ledc0
  - platform: ledc
    pin: GPIO5
    id: ledc1
  - platform: ledc
    pin: GPIO12
    id: ledc2
  - platform: ledc
    pin: GPIO13
    id: ledc3
  - platform: ledc
    pin: GPIO14
    id: ledc4
  - platform: ledc
    pin: GPIO15
    id: ledc5
  - platform: ledc
    pin: GPIO16
    id: ledc6
  - platform: ledc
    pin: GPIO17
    id: ledc7
  - platform: ledc
    pin: GPIO18
    id: ledc8
  - platform: ledc
    pin: GPIO19
    id: ledc9
  - platform: ledc
    pin: GPIO21
    id: ledc10
  - platform: ledc
    pin: GPIO22
    id: ledc11
  - platform: ledc
    pin: GPIO23
    id: ledc12
  - platform: ledc
    pin: GPIO25
    id: ledc13
  - platform: ledc
    pin: GPIO26
    id: ledc14

light:
  - platform: monochromatic
    id: step0
    name: ${display_name} 01 (bottom)
    output: ledc0
    internal: true
  - platform: monochromatic
    id: step1
    name: ${display_name} 02
    output: ledc1
    internal: true
  - platform: monochromatic
    id: step2
    name: ${display_name} 03
    output: ledc2
    internal: true
  - platform: monochromatic
    id: step3
    name: ${display_name} 04
    output: ledc3
    internal: true
  - platform: monochromatic
    id: step4
    name: ${display_name} 05
    output: ledc4
    internal: true
  - platform: monochromatic
    id: step5
    name: ${display_name} 06
    output: ledc5
    internal: true
  - platform: monochromatic
    id: step6
    name: ${display_name} 07
    output: ledc6
    internal: true
  - platform: monochromatic
    id: step7
    name: ${display_name} 08
    output: ledc7
    internal: true
  - platform: monochromatic
    id: step8
    name: ${display_name} 09
    output: ledc8
    internal: true
  - platform: monochromatic
    id: step9
    name: ${display_name} 10
    output: ledc9
    internal: true
  - platform: monochromatic
    id: step10
    name: ${display_name} 11
    output: ledc10
    internal: true
  - platform: monochromatic
    id: step11
    name: ${display_name} 12
    output: ledc11
    internal: true
  - platform: monochromatic
    id: step12
    name: ${display_name} 13
    output: ledc12
    internal: true
  - platform: monochromatic
    id: step13
    name: ${display_name} 14
    output: ledc13
    internal: true
  - platform: monochromatic
    id: step14
    name: ${display_name} 15 (top)
    output: ledc14
    internal: true
  - platform: partition
    id: step_lights
    name: ${display_name}
    #color_mode: brightness
    effects:
      - addressable_scan:
      - addressable_twinkle:
      - addressable_random_twinkle:
    segments:
      - single_light_id: step0
      - single_light_id: step1
      - single_light_id: step2
      - single_light_id: step3
      - single_light_id: step4
      - single_light_id: step5
      - single_light_id: step6
      - single_light_id: step7
      - single_light_id: step8
      - single_light_id: step9
      - single_light_id: step10
      - single_light_id: step11
      - single_light_id: step12
      - single_light_id: step13
      - single_light_id: step14

binary_sensor:
  # - platform: gpio
  #   pin:
  #     number: GPIO34
  #     mode: INPUT_PULLUP
  #     inverted: yes
  #   id: button_down
  #   device_class: light
  #   on_click:
  #     then:
  #       - script.execute: darken
  # - platform: gpio
  #   pin:
  #     number: GPIO35
  #     mode: INPUT_PULLUP
  #     inverted: yes
  #   id: button_up
  #   device_class: light
  #   on_click:
  #     then:
  #       - script.execute: brighten
  - platform: gpio
    pin:
      number: GPIO32
      mode: INPUT_PULLUP
      inverted: yes
    id: button_toggle
    device_class: light
    on_click:
      then:
        - script.execute: fade

script:
  - id: fade
    then:
      - light.toggle: step0
      - delay: 120ms
      - light.toggle: step1
      - delay: 120ms
      - light.toggle: step2
      - delay: 120ms
      - light.toggle: step3
      - delay: 120ms
      - light.toggle: step4
      - delay: 120ms
      - light.toggle: step5
      - delay: 120ms
      - light.toggle: step6
      - delay: 120ms
      - light.toggle: step7
      - delay: 120ms
      - light.toggle: step8
      - delay: 120ms
      - light.toggle: step9
      - delay: 120ms
      - light.toggle: step10
      - delay: 120ms
      - light.toggle: step11
      - delay: 120ms
      - light.toggle: step12
      - delay: 120ms
      - light.toggle: step13
      - delay: 120ms
      - light.toggle: step14
      # - lambda: |-
      #     static LightState* lights[]={id(step0),id(step1),id(step2),id(step3),id(step4),id(step5),id(step6),id(step7),id(step8),id(step9),id(step10),id(step11),id(step12),id(step13),id(step14)};
      #     for (int i {0}; i <= 14; i++) {
      #       auto call = lights[i]->toggle();
      #       call.set_transition_length(1000);
      #       call.perform();
      #       delay_microseconds_accurate(200);
      #     }
  - id: fade_up_on
    then:
      - light.turn_on: step0
      - delay: 120ms
      - light.turn_on: step1
      - delay: 120ms
      - light.turn_on: step2
      - delay: 120ms
      - light.turn_on: step3
      - delay: 120ms
      - light.turn_on: step4
      - delay: 120ms
      - light.turn_on: step5
      - delay: 120ms
      - light.turn_on: step6
      - delay: 120ms
      - light.turn_on: step7
      - delay: 120ms
      - light.turn_on: step8
      - delay: 120ms
      - light.turn_on: step9
      - delay: 120ms
      - light.turn_on: step10
      - delay: 120ms
      - light.turn_on: step11
      - delay: 120ms
      - light.turn_on: step12
      - delay: 120ms
      - light.turn_on: step13
      - delay: 120ms
      - light.turn_on: step14
      # - lambda: |-
      #     static LightState* lights[]={id(step0),id(step1),id(step2),id(step3),id(step4),id(step5),id(step6),id(step7),id(step8),id(step9),id(step10),id(step11),id(step12),id(step13),id(step14)};
      #     for (int i {0}; i <= 14; i++) {
      #       if (lights[i]->remote_values.is_on()) continue;
      #       auto call = lights[i]->turn_on();
      #       call.set_transition_length(1000 + (150 * i));
      #       call.perform();
      #     }
  - id: fade_down_on
    then:
      - light.turn_on: step14
      - delay: 120ms
      - light.turn_on: step13
      - delay: 120ms
      - light.turn_on: step12
      - delay: 120ms
      - light.turn_on: step11
      - delay: 120ms
      - light.turn_on: step10
      - delay: 120ms
      - light.turn_on: step9
      - delay: 120ms
      - light.turn_on: step8
      - delay: 120ms
      - light.turn_on: step7
      - delay: 120ms
      - light.turn_on: step6
      - delay: 120ms
      - light.turn_on: step5
      - delay: 120ms
      - light.turn_on: step4
      - delay: 120ms
      - light.turn_on: step3
      - delay: 120ms
      - light.turn_on: step2
      - delay: 120ms
      - light.turn_on: step1
      - delay: 120ms
      - light.turn_on: step0
      # - lambda: |-
      #     static LightState* lights[]={id(step0),id(step1),id(step2),id(step3),id(step4),id(step5),id(step6),id(step7),id(step8),id(step9),id(step10),id(step11),id(step12),id(step13),id(step14)};
      #     for (int i {0}; i <= 0; i++) {
      #       if (lights[14 - i]->remote_values.is_on()) continue;
      #       auto call = lights[14 - i]->turn_on();
      #       call.set_transition_length(1000 + (150 * i));
      #       call.perform();
      #     }
  - id: fade_up_off
    then:
      - light.turn_off: step0
      - delay: 120ms
      - light.turn_off: step1
      - delay: 120ms
      - light.turn_off: step2
      - delay: 120ms
      - light.turn_off: step3
      - delay: 120ms
      - light.turn_off: step4
      - delay: 120ms
      - light.turn_off: step5
      - delay: 120ms
      - light.turn_off: step6
      - delay: 120ms
      - light.turn_off: step7
      - delay: 120ms
      - light.turn_off: step8
      - delay: 120ms
      - light.turn_off: step9
      - delay: 120ms
      - light.turn_off: step10
      - delay: 120ms
      - light.turn_off: step11
      - delay: 120ms
      - light.turn_off: step12
      - delay: 120ms
      - light.turn_off: step13
      - delay: 120ms
      - light.turn_off: step14
      # - lambda: |-
      #     static LightState* lights[]={id(step0),id(step1),id(step2),id(step3),id(step4),id(step5),id(step6),id(step7),id(step8),id(step9),id(step10),id(step11),id(step12),id(step13),id(step14)};
      #     for (int i {0}; i <= 14; i++) {
      #       if (!lights[i]->remote_values.is_on()) continue;
      #       auto call = lights[i]->turn_off();
      #       call.set_transition_length(1000 + (150 * i));
      #       call.perform();
      #     }
  - id: fade_down_off
    then:
      - light.turn_off: step14
      - delay: 120ms
      - light.turn_off: step13
      - delay: 120ms
      - light.turn_off: step12
      - delay: 120ms
      - light.turn_off: step11
      - delay: 120ms
      - light.turn_off: step10
      - delay: 120ms
      - light.turn_off: step9
      - delay: 120ms
      - light.turn_off: step8
      - delay: 120ms
      - light.turn_off: step7
      - delay: 120ms
      - light.turn_off: step6
      - delay: 120ms
      - light.turn_off: step5
      - delay: 120ms
      - light.turn_off: step4
      - delay: 120ms
      - light.turn_off: step3
      - delay: 120ms
      - light.turn_off: step2
      - delay: 120ms
      - light.turn_off: step1
      - delay: 120ms
      - light.turn_off: step0
      # - lambda: |-
      #     static LightState* lights[]={id(step0),id(step1),id(step2),id(step3),id(step4),id(step5),id(step6),id(step7),id(step8),id(step9),id(step10),id(step11),id(step12),id(step13),id(step14)};
      #     for (int i {0}; i <= 14; i++) {
      #       if (!lights[14 - i]->remote_values.is_on()) continue;
      #       auto call = lights[14 - i]->turn_off();
      #       call.set_transition_length(1000 + (150 * i));
      #       call.perform();
      #     }
  - id: darken
    then:
      - light.dim_relative:
          id: step0
          relative_brightness: -5%
      - light.dim_relative:
          id: step1
          relative_brightness: -5%
      - light.dim_relative:
          id: step2
          relative_brightness: -5%
      - light.dim_relative:
          id: step3
          relative_brightness: -5%
      - light.dim_relative:
          id: step4
          relative_brightness: -5%
      - light.dim_relative:
          id: step5
          relative_brightness: -5%
      - light.dim_relative:
          id: step6
          relative_brightness: -5%
      - light.dim_relative:
          id: step7
          relative_brightness: -5%
      - light.dim_relative:
          id: step8
          relative_brightness: -5%
      - light.dim_relative:
          id: step9
          relative_brightness: -5%
      - light.dim_relative:
          id: step10
          relative_brightness: -5%
      - light.dim_relative:
          id: step11
          relative_brightness: -5%
      - light.dim_relative:
          id: step12
          relative_brightness: -5%
      - light.dim_relative:
          id: step13
          relative_brightness: -5%
      - light.dim_relative:
          id: step14
          relative_brightness: -5%
  - id: brighten
    then:
      - light.dim_relative:
          id: step0
          relative_brightness: 5%
      - light.dim_relative:
          id: step1
          relative_brightness: 5%
      - light.dim_relative:
          id: step2
          relative_brightness: 5%
      - light.dim_relative:
          id: step3
          relative_brightness: 5%
      - light.dim_relative:
          id: step4
          relative_brightness: 5%
      - light.dim_relative:
          id: step5
          relative_brightness: 5%
      - light.dim_relative:
          id: step6
          relative_brightness: 5%
      - light.dim_relative:
          id: step7
          relative_brightness: 5%
      - light.dim_relative:
          id: step8
          relative_brightness: 5%
      - light.dim_relative:
          id: step9
          relative_brightness: 5%
      - light.dim_relative:
          id: step10
          relative_brightness: 5%
      - light.dim_relative:
          id: step11
          relative_brightness: 5%
      - light.dim_relative:
          id: step12
          relative_brightness: 5%
      - light.dim_relative:
          id: step13
          relative_brightness: 5%
      - light.dim_relative:
          id: step14
          relative_brightness: 5%
